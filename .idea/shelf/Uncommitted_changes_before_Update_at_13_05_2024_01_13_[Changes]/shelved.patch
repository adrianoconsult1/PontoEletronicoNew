Index: app/src/main/java/com/example/pontoeletroniconew/SearchListActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pontoeletroniconew;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.view.animation.LayoutAnimationController;\r\nimport android.widget.EditText;\r\nimport android.widget.ExpandableListView;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.firebase.client.Firebase;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.text.Normalizer;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\nimport java.util.TreeSet;\r\n\r\n\r\npublic class SearchListActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n\r\n    private SwipeRefreshLayout swipeRefreshLayout;\r\n    private ExpandableListView listView;\r\n    private ExpandableListAdapter listAdapter;\r\n    private List<String> listDataHeader;\r\n    private HashMap<String,List<String>> listHash;\r\n    private HashMap<String,List<String>> listFireHash;\r\n    private int qtdHeader;\r\n    private ApontamentoDataSource source;\r\n    private ImageButton floatButton;\r\n    private List<Ponto> pontos = new ArrayList<Ponto>();\r\n    private List<String> aux = new ArrayList<String>();\r\n    private TreeSet<Date> cabs = new TreeSet<Date>();\r\n    private ArrayList<String> ord = new ArrayList<String>();\r\n    private SimpleDateFormat f = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n    private DrawerLayout drawerLayout;\r\n    private NavigationView navigationView;\r\n    private androidx.appcompat.widget.Toolbar toolbar;\r\n    private Bundle b = new Bundle();\r\n\r\n    private FirebaseAuthentication firebaseAuthentication;\r\n    String dayLast = null;\r\n    private static final String MY_PASSWORD_DIALOG_ID = \"RHPONTOMASTER\";\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n\r\n\r\n        super.onCreate(savedInstanceState);\r\n        Log.i(\"SLA1\",\"SLA1\");\r\n        overridePendingTransition(R.anim.fade_in, R.anim.fade_out);\r\n        Log.i(\"SLA2\",\"SLA2\");\r\n        b = savedInstanceState;\r\n        Log.i(\"SLA3\",\"SLA3\");\r\n        setContentView(R.layout.lista_apontamentos);\r\n        Log.i(\"SLA4\",\"SLA4\");\r\n        setTitle(\"Ponto Eletrônico\");\r\n\r\n        toolbar = (androidx.appcompat.widget.Toolbar) findViewById(R.id.barraMain);\r\n\r\n        setSupportActionBar(toolbar);\r\n        Log.i(\"SLA5\",\"SLA5\");\r\n        navigationView = (NavigationView) findViewById(R.id.navView);\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        Log.i(\"SLA6\",\"SLA6\");\r\n        drawerLayout = (DrawerLayout) findViewById(R.id.drawerLayout);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.open_drawer, R.string.close_drawer);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        Log.i(\"SLA7\",\"SLA7\");\r\n\r\n\r\n         swipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.Swipe);\r\n        Log.i(\"SLA8\",\"SLA8\");\r\n        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                drawerLayout.refreshDrawableState();\r\n                listAdapter.notifyDataSetChanged();\r\n                Toast.makeText(getApplicationContext(),\"Atualizando Tela Inicial \",Toast.LENGTH_LONG).show();\r\n             /* Intent it = new Intent(SearchListActivity.this, SearchListActivity.class);\r\n                it.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY );\r\n                startActivity(it); */\r\n                Log.i(\"SLA9\",\"SLA9\");\r\n                recreate();\r\n                Log.i(\"SLA10\",\"SLA10\");\r\n               //  initData();\r\n\r\n                new Handler().postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Log.i(\"SLA11\",\"SLA11\");\r\n                        swipeRefreshLayout.setRefreshing(false);\r\n                    }\r\n                },4000);\r\n                Log.i(\"SLA12\",\"SLA12\");\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n        swipeRefreshLayout.setColorScheme(android.R.color.holo_blue_bright,\r\n                android.R.color.holo_green_light,\r\n                android.R.color.holo_orange_light,\r\n                android.R.color.holo_red_light,\r\n                android.R.color.holo_purple);\r\n        Log.i(\"SLA13\",\"SLA13\");\r\n        source = new ApontamentoDataSource(getApplicationContext());\r\n        DisplayMetrics metrics = new DisplayMetrics();\r\n        listView = (ExpandableListView)findViewById(R.id.lvExp);\r\n        getWindowManager().getDefaultDisplay().getMetrics(metrics);\r\n        int width = metrics.widthPixels;\r\n        Log.i(\"SLA14\",\"SLA14\");\r\n        listView.setIndicatorBounds(width - GetDipsFromPixel(50), width - 40);\r\n        int resId = R.anim.layout_animation_fall_down;\r\n        LayoutAnimationController animation = AnimationUtils.loadLayoutAnimation(getApplicationContext(), resId);\r\n        listView.setLayoutAnimation(animation);\r\n        Log.i(\"SLA15\",\"SLA15\");\r\n\r\n\r\n        initData();\r\n        floatButton = (ImageButton) findViewById(R.id.btnAdd);\r\n        Log.i(\"ListFirePos\",\"antes\");\r\n        Log.i(\"SLA16\",\"SLA16\");\r\n\r\n        Log.i(\"ListFirePos\",aux.toString());\r\n\r\n        floatButton.setOnClickListener(new View.OnClickListener()\r\n            {\r\n                @Override\r\n                public void onClick(View v)\r\n                {\r\n                   Toast.makeText(getApplicationContext(),\"Apontar\",Toast.LENGTH_LONG).show();\r\n                   Intent it = new Intent(SearchListActivity.this, Cadastro.class);\r\n                   //incluir lista de pessoas apontadas no dia coomo put extra, verificar se to primeiro item da arvore é o dia atual mesmo\r\n                   // cuidar para que esteja atualizado os aponts\r\n\r\n                    it.putExtra(\"tipo\",0);\r\n                   SimpleDateFormat format = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n                   List<String> a = new ArrayList<>();\r\n                   a = source.apontamentosDoDia(format.format(Calendar.getInstance().getTime()));\r\n                   it.putStringArrayListExtra (\"funcApontados\",(ArrayList<String>) a);\r\n                   Log.i(\"funcApontados\",format.format(Calendar.getInstance().getTime())+\"   \"+a.toString());\r\n                   it.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\r\n                   startActivity(it);\r\n                }\r\n            });\r\n\r\n\r\n        listView.setOnChildClickListener(new ExpandableListView.OnChildClickListener() {\r\n            @Override\r\n            public boolean onChildClick(ExpandableListView expandableListView, View view, int i, int i1, long l) {\r\n                String data = listDataHeader.get(i);\r\n                List<String> codFun = source.apontamentosDoDia(data);\r\n                String aux = String.valueOf(codFun.get(i1).charAt(0)) + String.valueOf(codFun.get(i1).charAt(1)) + String.valueOf(codFun.get(i1).charAt(2));\r\n                Log.i(\"HeaderChar0\", String.valueOf(codFun.get(i1).charAt(0)));\r\n                Log.i(\"HeaderChar1\",String.valueOf(codFun.get(i1).charAt(1)));\r\n                Log.i(\"HeaderChar2\",String.valueOf(codFun.get(i1).charAt(2)));\r\n                Log.i(\"HeaderFun\",codFun.get(i1));\r\n                Log.i(\"HeaderData\",data);\r\n                Log.i(\"HeaderChild\",\"\"+aux);\r\n                int func = Integer.parseInt(aux);\r\n\r\n\r\n\r\n               // Toast.makeText(getApplicationContext(), data, Toast.LENGTH_LONG).show();\r\n                Intent it = new Intent(SearchListActivity.this, Apontamento.class);\r\n                it.putExtra(\"formatada\",data);\r\n                it.putExtra(\"funcionario\",func);\r\n                it.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\r\n                startActivity(it);\r\n\r\n                return false;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public int GetDipsFromPixel(float pixels)\r\n    {\r\n        // Get the screen's density scale\r\n        final float scale = getResources().getDisplayMetrics().density;\r\n        // Convert the dps to pixels, based on density scale\r\n        return (int) (pixels * scale + 0.5f);\r\n    }\r\n\r\n    public static String removerAcentos(String str) {\r\n        return Normalizer.normalize(str, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\");\r\n    }\r\n\r\n    private void initData() {\r\n        pontos.clear();\r\n        aux.clear();\r\n        Log.i(\"SEARCH1\",\"SEARCH1\");\r\n        Firebase.setAndroidContext(this);\r\n        Log.i(\"SEARCH2\",\"SEARCH2\");\r\n        FirebaseApp.initializeApp(getApplicationContext());\r\n        Log.i(\"SEARCH3\",\"SEARCH3\");\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        Log.i(\"SEARCH4\",\"SEARCH4\");\r\n        String userEmail = \"pontoeletronicoaj@gmail.com\";\r\n        String userPassword = \"2AJ@eletronico3\";\r\n        firebaseAuthentication.authenticateUser(userEmail, userPassword);\r\n        Log.i(\"SEARCH5\",\"SEARCH5\");\r\n        listDataHeader = new ArrayList<>();\r\n        listHash = new HashMap<>();\r\n        listFireHash = new HashMap<>();\r\n        try {\r\n            database.setPersistenceEnabled(true);\r\n            Log.i(\"SEARCH6\",\"SEARCH6\");\r\n        }\r\n        catch (Exception e)\r\n        {\r\n          //  Toast.makeText(getApplicationContext(),\"Fire Off\",Toast.LENGTH_LONG).show();\r\n        }\r\n        final DatabaseReference myRef = database.getReference();\r\n        Log.i(\"SEARCH7\",\"SEARCH7\");\r\n        myRef.keepSynced(true);\r\n        Log.i(\"SEARCH8\",\"\"+database.getReference());\r\n\r\n        myRef.child(\"apontamentos\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                for(DataSnapshot objSnapshot:dataSnapshot.getChildren()) {\r\n                    Ponto p = objSnapshot.getValue(Ponto.class);\r\n                    Log.i(\"Filho\",p.toString());\r\n                      pontos.add(p);\r\n                    final Calendar c = Calendar.getInstance();\r\n                      Date d = null;\r\n                    try {\r\n                        d = f.parse(p.getDATA());\r\n                        c.setTime(d);\r\n                    } catch (ParseException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    cabs.add(c.getTime());\r\n\r\n\r\n                    Log.i(\"FilhosTam\",\"\"+pontos.size());\r\n                }\r\n                Iterator<Date> ite = cabs.descendingIterator();\r\n                while(ite.hasNext()) {\r\n                    ord.add(f.format(ite.next()));\r\n                }\r\n                qtdHeader = pontos.size();\r\n                cabs.descendingIterator();\r\n                Log.i(\"Cabeçalhos\",ord.toString());\r\n                Log.i(\"QtdCabeçalhos\",\"\"+cabs.size());\r\n                Log.i(\"ListHeaderFire\",\"\"+qtdHeader);\r\n                Log.i(\"ListFireHash4\",listFireHash.toString());\r\n\r\n                String dia1 = ord.get(0);\r\n\r\n                //  if(pontos.size() > 0)\r\n                //  {\r\n\r\n                //  }\r\n                //  else {\r\n                //      qtdHeader = source.todasDatas().size();\r\n                //     Log.i(\"ListHeaderSQLite\",\"\"+qtdHeader);\r\n                // }\r\n\r\n\r\n\r\n                for (int i = 0; i < 7; i++)\r\n                {\r\n                    Log.i(\"ListFireHash44\",listFireHash.toString());\r\n                    // if(pontos.size() > 0) {\r\n                    listDataHeader.add(ord.get(i));\r\n                    Query q = null;\r\n                    aux.clear();\r\n                    Log.i(\"ListFireHash444\",listFireHash.toString());\r\n                    q = FirebaseDatabase.getInstance().getReference().child(\"apontamentos\").orderByChild(\"data\").equalTo(ord.get(i));\r\n                    Log.i(\"ListFireHash4444\",listFireHash.toString());\r\n                    q.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                            for(DataSnapshot objSnapshot:dataSnapshot.getChildren()) {\r\n                                Ponto b = objSnapshot.getValue(Ponto.class);\r\n                                Log.i(\"ListFireHash44444\",b.toString());\r\n                                ContentValues valores;\r\n                                long resultado;\r\n\r\n                                SQLiteDatabase db = new DatabaseHelper(getApplicationContext()).getWritableDatabase();\r\n                                Date d = null;\r\n                                SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n                                try {\r\n                                    d = new SimpleDateFormat(\"dd/MM/yyyy\").parse(b.getDATA());\r\n                                } catch (ParseException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            /*\r\n                            valores = new ContentValues();\r\n                            Log.i(\"Query\",valores.toString());\r\n                            Log.i(\"PInsert\",b.toString());\r\n\r\n                            valores = new ContentValues();\r\n                            valores.put(\"DATA\", format.format(d));\r\n                            valores.put(\"CODFUNCIONATIO\",b.getCODFUNCIONATIO());\r\n                            valores.put(\"DESCRICAO\",b.getDESCRICAO());\r\n\r\n                            valores.put(\"APONT1\", b.getAPONT1());\r\n                            valores.put(\"GPS1\", b.getGPS1());\r\n                            valores.put(\"LOCAL1\", b.getLOCAL1());\r\n\r\n\r\n                            valores.put(\"APONT2\", b.getAPONT2());\r\n                            valores.put(\"GPS2\", b.getGPS2());\r\n                            valores.put(\"LOCAL2\", b.getLOCAL2());\r\n\r\n                            valores.put(\"APONT3\", b.getAPONT3());\r\n                            valores.put(\"GPS3\", b.getGPS3());\r\n                            valores.put(\"LOCAL3\", b.getLOCAL3());\r\n\r\n                            valores.put(\"APONT4\", b.getAPONT4());\r\n                            valores.put(\"GPS4\", b.getGPS4());\r\n                            valores.put(\"LOCAL4\", b.getLOCAL4());\r\n\r\n\r\n                            valores.put(\"APONTEXTRA\", b.getAPONTEXTRA());\r\n                            valores.put(\"GPSEXTRA\", b.getGPSEXTRA());\r\n                            valores.put(\"LOCALEXTRA\", b.getLOCALEXTRA());\r\n\r\n\r\n                            valores.put(\"APONTEXTRA2\", b.getAPONTEXTRA2());\r\n                            valores.put(\"GPSEXTRA2\", b.getGPSEXTRA2());\r\n                            valores.put(\"LOCALEXTRA2\", b.getLOCALEXTRA2());\r\n\r\n                            valores.put(\"ROWID\",b.getROWID()); */\r\n                               String l1;\r\n                               String l2;\r\n                               String l3;\r\n                               String l4;\r\n                               String le;\r\n                               String le2;\r\n\r\n                               try {\r\n                                   l1 = b.getLOCAL1().replace(\"'\", \" \");\r\n                               }\r\n                               catch(Exception e)\r\n                               {\r\n                                   System.out.println(e);\r\n                                   l1 = \"\";\r\n                               }\r\n\r\n\r\n                            try {\r\n                                l2 = b.getLOCAL2().replace(\"'\", \" \");\r\n                            }\r\n                            catch(Exception e)\r\n                            {\r\n                                System.out.println(e);\r\n                                l2 = \"\";\r\n                            }\r\n                            try {\r\n                                l3 = b.getLOCAL3().replace(\"'\", \" \");\r\n                            }\r\n                            catch(Exception e)\r\n                            {\r\n                                System.out.println(e);\r\n                                l3 = \"\";\r\n                            }\r\n\r\n                            try {\r\n                                l4 = b.getLOCAL4().replace(\"'\", \" \");\r\n                            }\r\n                            catch(Exception e)\r\n                            {\r\n                                System.out.println(e);\r\n                                l4 = \"\";\r\n                            }\r\n                                try {\r\n                                    le = b.getLOCALEXTRA().replace(\"'\", \" \");\r\n                                }\r\n                                catch(Exception e)\r\n                                {\r\n                                    System.out.println(e);\r\n                                    le = \"\";\r\n                                }\r\n                                try {\r\n                                    le2 = b.getLOCALEXTRA2().replace(\"'\", \" \");\r\n                                }\r\n                                catch(Exception e)\r\n                                {\r\n                                    System.out.println(e);\r\n                                    le2 = \"\";\r\n                                }\r\n\r\n                                String replace = \"INSERT OR REPLACE INTO apontamentos (data,codfuncionatio,descricao,apont1,local1,gps1,apont2,local2,gps2,apont3,local3,gps3,apont4,local4,gps4,apontextra,localextra,gpsextra,apontextra2,localextra2,gpsextra2,ROWID,DATACODFUNCIONATIO)\\n\" +\r\n                                        \"values('\"+format.format(d)+\" 00:00:00',\"+b.getCODFUNCIONATIO()+\",'\"+b.getDESCRICAO()+\"','\"+b.getAPONT1()+\"','\"+l1+\"','\"+b.getGPS1()+\"','\"+b.getAPONT2()+\"','\"+l2+\"','\"+b.getGPS2()+\"','\"+b.getAPONT3()+\"','\"+l3+\"','\"+b.getGPS3()+\"','\"+b.getAPONT4()+\"','\"+l4+\"','\"+b.getGPS4()+\"','\"+b.getAPONTEXTRA()+\"','\"+le+\"','\"+b.getGPSEXTRA()+\"','\"+b.getAPONTEXTRA2()+\"','\"+le2+\"','\"+b.getGPSEXTRA2()+\"',\"+b.getROWID()+\",'\"+b.getDATACODFUNCIONATIO()+\"');\";\r\n                                Log.i(\"QueryReplace\",replace);\r\n                                db.execSQL(replace);\r\n                                db.close();\r\n                            }\r\n                            Log.i(\"ListFireHash3\",aux.toString());\r\n\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n                    //  }\r\n                    //   else {\r\n                    //     listDataHeader.add(source.todasDatas().get(i));\r\n                    //   }\r\n                    Log.i(\"ListHeaderText\",ord.get(i));\r\n                    listHash.put(ord.get(i),source.apontamentosDoDia(ord.get(i)));\r\n\r\n                }\r\n                Log.i(\"ListFire\",pontos.toString());\r\n                Log.i(\"FireRoundPre\",\"\"+listDataHeader.size());\r\n\r\n                List<String> keys = new ArrayList<>(listHash.keySet());\r\n                Log.i(\"FireRoundListDataHeader\",\"\"+ keys.get(0) );\r\n                getUltimoDiaApont(new MyCallback() {\r\n                    @Override\r\n                    public void onCallback(String value) {\r\n                        Log.i(\"FireRoundListMethod\",\"\"+value.toString());\r\n\r\n\r\n                    }\r\n                });\r\n\r\n                listAdapter = new ExpandableListAdapter(getApplicationContext(), listDataHeader, listHash);\r\n                listView.setAdapter(listAdapter);\r\n\r\n                Log.i(\"ListFireDps\",aux.toString());\r\n                Log.i(\"ListHeaderFire2\",\"\"+qtdHeader);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.i(\"The read failed: \",\"\"+ databaseError.getCode());\r\n            }\r\n        });\r\n        Log.i(\"ListFire2\",pontos.toString());\r\n\r\n\r\n\r\n    }\r\n\r\n    public void getUltimoDiaApont(MyCallback myCallback)\r\n    {\r\n\r\n\r\n        Firebase.setAndroidContext(this);\r\n        FirebaseApp.initializeApp(getApplicationContext());\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        try {\r\n            database.setPersistenceEnabled(true);\r\n\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            //  Toast.makeText(getApplicationContext(),\"Fire Off\",Toast.LENGTH_LONG).show();\r\n        }\r\n        final DatabaseReference myRef = database.getReference();\r\n        myRef.keepSynced(true);\r\n        Log.i(\"Referencia2\",\"\"+database.getReference());\r\n\r\n        myRef.child(\"apontamentos\").orderByChild(\"data\").limitToFirst(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for(DataSnapshot objSnapshot:dataSnapshot.getChildren()) {\r\n                    Ponto p = objSnapshot.getValue(Ponto.class);\r\n                    dayLast = p.getDATA();\r\n                    Log.i(\"FireRoundDay:\",dayLast);\r\n                    final Calendar c = Calendar.getInstance();\r\n                    Date d = null;\r\n                    try {\r\n                        d = f.parse(p.getDATA());\r\n                        c.setTime(d);\r\n                    } catch (ParseException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    cabs.add(c.getTime());\r\n                }\r\n                Iterator<Date> ite = cabs.descendingIterator();\r\n                while(ite.hasNext()) {\r\n                    ord.add(f.format(ite.next()));\r\n                }\r\n                dayLast = ord.get(0);\r\n                for(int i = 0; i < 7; i++)\r\n                {\r\n                    listHash.put(ord.get(i),source.apontamentosDoDia(ord.get(i)));\r\n\r\n                }\r\n                myCallback.onCallback(dayLast);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public boolean hashUpdated(String value, HashMap<String,List<String>> listAux)\r\n    {\r\n        boolean result = false;\r\n        List<String> keys = new ArrayList<>(listAux.keySet());\r\n\r\n        for(int i = 0; i < keys.size(); i++)\r\n        {\r\n            if(keys.get(i).equals(value) )\r\n            {\r\n                result = true;\r\n                i = listAux.size();\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public List<String> apontamentoDoDiaFire(String dia)\r\n    {\r\n\r\n            //CountDownLatch done = new CountDownLatch(1);\r\n            Query q = null;\r\n            q = FirebaseDatabase.getInstance().getReference().child(\"apontamentos\").orderByChild(\"data\").equalTo(dia);\r\n            Log.i(\"ListFireDay\",dia);\r\n\r\n\r\n            q.addValueEventListener (new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    List<String> l = new ArrayList<>();\r\n                    for(DataSnapshot objSnapshot:dataSnapshot.getChildren()) {\r\n\r\n                        Ponto b = objSnapshot.getValue(Ponto.class);\r\n                        Log.i(\"Pts\",b.toString());\r\n                        l.add(b.getDESCRICAO());\r\n\r\n                    }\r\n\r\n//                            Log.i(\"ListFireRd2\",finalI+\"Rd \"+\"Data:\"+listDataHeader.get(finalI));\r\n                    // listFireHash.put(ord.get(finalI),aux);\r\n\r\n                            /*\r\n\r\n                            if(finalI == 6)\r\n                            {\r\n                               Log.i(\"Chegou\",\"Sim\");\r\n                                listAdapter = new ExpandableListAdapter(getApplicationContext(),listDataHeader,listFireHash);\r\n                                listView.setAdapter(listAdapter);\r\n                            }*/\r\n\r\n                    aux.addAll(l);\r\n                    Log.i(\"ListFireHash3\",aux.toString());\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n\r\n            });\r\n\r\n\r\n        Log.i(\"ListFireHashDps\",aux.toString());\r\n        return aux;\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.nav_item_one: {\r\n                Toast.makeText(this, \"Funcionarios\", Toast.LENGTH_SHORT).show();\r\n              /*  Intent it = new Intent(SearchListActivity.this, MainActivity.class);\r\n                startActivity(it);*/\r\n                break;\r\n            }\r\n            case R.id.nav_item_two: {\r\n                Toast.makeText(this, \"Ex Funcionarios\", Toast.LENGTH_SHORT).show();\r\n                LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                final View layout = inflater.inflate(R.layout.dialog_signin, (ViewGroup) findViewById(R.id.telaSenha) );\r\n                final EditText password1 = (EditText) layout.findViewById(R.id.password);\r\n                final TextView error = (TextView) layout.findViewById(R.id.TextView_PwdProblem);\r\n\r\n                password1.addTextChangedListener(new TextWatcher() {\r\n                    public void afterTextChanged(Editable s) {\r\n                        String strPass1 = password1.getText().toString();\r\n\r\n                        if (strPass1.equals(MY_PASSWORD_DIALOG_ID)) {\r\n                            error.setText(\"Logar\");\r\n                        } else {\r\n                            error.setText(\"Senha Incorreta\");\r\n                        }\r\n                    }\r\n\r\n                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\r\n                    public void onTextChanged(CharSequence s, int start, int before, int count) {}\r\n                });\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n                builder.setTitle(\"Senha\");\r\n                builder.setView(layout);\r\n\r\n                builder.setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int whichButton) {\r\n                        removeDialog(R.layout.dialog_signin);\r\n                    }\r\n                });\r\n\r\n                builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        String strPassword1 = password1.getText().toString();\r\n\r\n                        if (strPassword1.equals(MY_PASSWORD_DIALOG_ID)) {\r\n                            Toast.makeText(getApplicationContext(),\r\n                                    \"Logado Com Sucesso!!!\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        removeDialog(R.layout.dialog_signin);\r\n                    }\r\n                });\r\n\r\n                AlertDialog passwordDialog = builder.create();\r\n                passwordDialog.show();\r\n\r\n                /*  Intent it = new Intent(SearchListActivity.this, MainActivity.class);\r\n                startActivity(it);*/\r\n                break;\r\n            }\r\n            case R.id.nav_item_three: {\r\n                Toast.makeText(this, \"Relatório\", Toast.LENGTH_SHORT).show();\r\n\r\n                LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                final View layout = inflater.inflate(R.layout.dialog_signin, (ViewGroup) findViewById(R.id.telaSenha) );\r\n                final EditText password1 = (EditText) layout.findViewById(R.id.password);\r\n                final TextView error = (TextView) layout.findViewById(R.id.TextView_PwdProblem);\r\n\r\n                password1.addTextChangedListener(new TextWatcher() {\r\n                    public void afterTextChanged(Editable s) {\r\n                        String strPass1 = password1.getText().toString();\r\n\r\n                        if (strPass1.equals(MY_PASSWORD_DIALOG_ID)) {\r\n                        error.setText(\"Logar\");\r\n                        } else {\r\n                            error.setText(\"Senha Incorreta\");\r\n                        }\r\n                    }\r\n\r\n                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\r\n                    public void onTextChanged(CharSequence s, int start, int before, int count) {}\r\n                });\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n                builder.setTitle(\"Senha\");\r\n                builder.setView(layout);\r\n\r\n                builder.setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int whichButton) {\r\n                        removeDialog(R.layout.dialog_signin);\r\n                    }\r\n                });\r\n\r\n                builder.setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        String strPassword1 = password1.getText().toString();\r\n\r\n                        if (strPassword1.equals(MY_PASSWORD_DIALOG_ID)) {\r\n                            Toast.makeText(getApplicationContext(),\r\n                                    \"Logado Com Sucesso!!!\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        removeDialog(R.layout.dialog_signin);\r\n                    }\r\n                });\r\n\r\n                AlertDialog passwordDialog = builder.create();\r\n                passwordDialog.show();\r\n\r\n\r\n\r\n\r\n\r\n                break;\r\n            }\r\n            default: {\r\n                Toast.makeText(this, \"Menu Default\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n            }\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void recreate()\r\n    {\r\n        if (android.os.Build.VERSION.SDK_INT >= 11)\r\n        {\r\n            super.recreate();\r\n        }\r\n        else\r\n        {\r\n            startActivity(getIntent());\r\n            finish();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPointerCaptureChanged(boolean hasCapture) {\r\n\r\n    }\r\n\r\n    public interface MyCallback {\r\n        void onCallback(String value);\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pontoeletroniconew/SearchListActivity.java b/app/src/main/java/com/example/pontoeletroniconew/SearchListActivity.java
--- a/app/src/main/java/com/example/pontoeletroniconew/SearchListActivity.java	(revision 594edc373ceb7301bd6d888785d2d2a627a38810)
+++ b/app/src/main/java/com/example/pontoeletroniconew/SearchListActivity.java	(date 1715569782350)
@@ -112,6 +112,7 @@
             @Override
             public void onRefresh() {
                 drawerLayout.refreshDrawableState();
+                listAdapter = new ExpandableListAdapter(getApplicationContext(),listDataHeader,listHash);
                 listAdapter.notifyDataSetChanged();
                 Toast.makeText(getApplicationContext(),"Atualizando Tela Inicial ",Toast.LENGTH_LONG).show();
              /* Intent it = new Intent(SearchListActivity.this, SearchListActivity.class);
@@ -126,9 +127,9 @@
                     @Override
                     public void run() {
                         Log.i("SLA11","SLA11");
-                        swipeRefreshLayout.setRefreshing(false);
+                        swipeRefreshLayout.setRefreshing(true);
                     }
-                },4000);
+                },12000);
                 Log.i("SLA12","SLA12");
 
 
@@ -248,7 +249,7 @@
         }
         catch (Exception e)
         {
-          //  Toast.makeText(getApplicationContext(),"Fire Off",Toast.LENGTH_LONG).show();
+            Toast.makeText(getApplicationContext(),"Fire Off",Toast.LENGTH_LONG).show();
         }
         final DatabaseReference myRef = database.getReference();
         Log.i("SEARCH7","SEARCH7");
@@ -494,8 +495,8 @@
 
         }
         catch (Exception e)
-        {
-            //  Toast.makeText(getApplicationContext(),"Fire Off",Toast.LENGTH_LONG).show();
+       {
+              Toast.makeText(getApplicationContext(),"Fire Off",Toast.LENGTH_LONG).show();
         }
         final DatabaseReference myRef = database.getReference();
         myRef.keepSynced(true);
Index: app/src/main/res/anim/layout_animation_fall_down.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layoutAnimation\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:animation=\"@anim/item_animation_fall_down\"\r\n    android:delay=\"15%\"\r\n    android:animationOrder=\"normal\"\r\n    />
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/layout_animation_fall_down.xml b/app/src/main/res/anim/layout_animation_fall_down.xml
--- a/app/src/main/res/anim/layout_animation_fall_down.xml	(revision 594edc373ceb7301bd6d888785d2d2a627a38810)
+++ b/app/src/main/res/anim/layout_animation_fall_down.xml	(date 1715569782346)
@@ -2,6 +2,6 @@
 <layoutAnimation
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:animation="@anim/item_animation_fall_down"
-    android:delay="15%"
+    android:delay="30%"
     android:animationOrder="normal"
     />
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\napply plugin: 'kotlin-android'\r\n\r\napply plugin: 'kotlin-android-extensions'\r\n\r\nandroid {\r\n    compileSdkVersion 28\r\n    defaultConfig {\r\n        applicationId \"com.example.pontoeletroniconew\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 28\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    //noinspection GradleCompatiblea\r\n    implementation 'com.android.support:appcompat-v7:28.0.0'\r\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\r\n    implementation 'com.android.support:design:28.0.0'\r\n    implementation 'com.firebase:firebase-client-android:2.5.1+'\r\n    implementation 'com.google.firebase:firebase-core:16.0.9'\r\n    implementation 'com.google.firebase:firebase-database:16.0.1'\r\n    implementation 'com.google.firebase:firebase-firestore:18.2.0'\r\n    implementation 'com.google.firebase:firebase-auth:16.2.1'\r\n    implementation 'com.toptoche.searchablespinner:searchablespinnerlibrary:1.3.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n    implementation 'androidx.appcompat:appcompat:1.0.2'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'androidx.navigation:navigation-fragment:2.0.0'\r\n    implementation 'androidx.navigation:navigation-ui:2.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    testImplementation 'org.testng:testng:6.9.6'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    //implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    // glide image library\r\n    implementation 'com.github.bumptech.glide:glide:4.3.1'\r\n\r\n    // volley http library\r\n    implementation 'com.android.volley:volley:1.1.0'\r\n    implementation 'com.google.code.gson:gson:2.6.2'\r\n}\r\n\r\napply plugin: 'com.google.gms.google-services'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 594edc373ceb7301bd6d888785d2d2a627a38810)
+++ b/app/build.gradle	(date 1715568892880)
@@ -38,6 +38,7 @@
     implementation 'com.google.firebase:firebase-database:16.0.1'
     implementation 'com.google.firebase:firebase-firestore:18.2.0'
     implementation 'com.google.firebase:firebase-auth:16.2.1'
+    //implementation 'com.google.firebase:firebase-messaging:20.2.3'
     implementation 'com.toptoche.searchablespinner:searchablespinnerlibrary:1.3.1'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
     implementation 'com.google.android.material:material:1.0.0'
Index: app/src/main/java/com/example/pontoeletroniconew/Cadastro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pontoeletroniconew;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.location.*;\r\nimport android.net.ConnectivityManager;\r\nimport android.os.Bundle;\r\n\r\n\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.*;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.firebase.client.Firebase;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.database.*;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\n\r\npublic class Cadastro extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    private static final int REQUEST_LOCATION = 1;\r\n    private static final int REQUEST_INTERNET = 1;\r\n    private TextView hoje;\r\n    private Spinner SpiFuncionario;\r\n    private Button btnSalvar;\r\n    private Button btnCancelar;\r\n    private EditText local;\r\n    private double latitude;\r\n    private double longitude;\r\n    private LocationManager locationManager;\r\n    private GPSTracker gps;\r\n    private int codFunc;\r\n    private String obj;\r\n    private int registro;\r\n    private Spinner reg;\r\n    private String hr1;\r\n    private String hr2;\r\n    private String hr3;\r\n    private String hr4;\r\n    private String hre1;\r\n    private String hre2;\r\n    int tipo;\r\n    private int funApontamentoActivity;\r\n    private String dataReg;\r\n    Date d;\r\n    private long ROWIDapt;\r\n    private List<String> fireFunc = new ArrayList<String>();\r\n    private List<String> apontados = new ArrayList<String>();\r\n    private List<String> registrosSpinner = new ArrayList<String>();\r\n    private List<String> regUsed = new ArrayList<String>();\r\n    @SuppressLint(\"MissingPermission\")\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        codFunc = 23;\r\n        d = null;\r\n\r\n\r\n        super.onCreate(savedInstanceState);\r\n        //overridePendingTransition(R.anim.fade_in, R.anim.fade_out);\r\n        setContentView(R.layout.cadastro_main);\r\n        setTitle(\"Apontamento\");\r\n        getSupportActionBar().setDisplayShowHomeEnabled(true);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n\r\n        SimpleDateFormat format = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);\r\n        ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.ACCESS_NETWORK_STATE}, REQUEST_INTERNET);\r\n        Intent intent = getIntent();\r\n        savedInstanceState = intent.getExtras();\r\n        tipo = savedInstanceState.getInt(\"tipo\");\r\n        apontados = savedInstanceState.getStringArrayList(\"funcApontados\");\r\n        if (tipo == 1) {\r\n            ROWIDapt = savedInstanceState.getLong(\"ROWID\");\r\n            hr1 = savedInstanceState.getString(\"hora1\");\r\n            hr2 = savedInstanceState.getString(\"hora2\");\r\n            hr3 = savedInstanceState.getString(\"hora3\");\r\n            hr4 = savedInstanceState.getString(\"hora4\");\r\n            hre1 = savedInstanceState.getString(\"horaextra\");\r\n            hre2 = savedInstanceState.getString(\"horaextra2\");\r\n            regUsed = savedInstanceState.getStringArrayList(\"regUsed\");\r\n        }\r\n        funApontamentoActivity = savedInstanceState.getInt(\"funcionarioApontamento\");\r\n        dataReg = savedInstanceState.getString(\"dataApontamento\");\r\n\r\n        gps = new GPSTracker(this);\r\n        Log.i(\"tipo\", \"\" + tipo);\r\n        Log.i(\"funApontamentoActivity\", \"\" + funApontamentoActivity);\r\n        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\r\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n            Log.i(\"GPSs1\",\"L1\");\r\n            gps.showSettingsAlert();\r\n        }\r\n\r\n        if (!gps.canGetLocation()) {\r\n            Log.i(\"GPSs2\",\"L2\");\r\n            gps.showSettingsAlert();\r\n        }\r\n\r\n        gps.refresh();\r\n        latitude = gps.getLatitude();\r\n        longitude = gps.getLongitude();\r\n\r\n\r\n        Log.i(\"API3\", String.valueOf(latitude) + \", \" + String.valueOf(longitude));\r\n\r\n        local = (EditText) findViewById(R.id.Local);\r\n        hoje = (TextView) findViewById(R.id.DataHoje);\r\n        if (dataReg != null) {\r\n            hoje.setText(dataReg);\r\n        } else {\r\n            hoje.setText(\"\" + format.format(Calendar.getInstance().getTime()));\r\n        }\r\n        SpiFuncionario = (Spinner) findViewById(R.id.Funcionario);\r\n        reg = (Spinner) findViewById(R.id.Registro);\r\n        loadSpinnerData(tipo);\r\n\r\n        registrosSpinner.add(\"1_Entrada\");\r\n        registrosSpinner.add(\"2_Saída para Almoço\");\r\n        registrosSpinner.add(\"3_Volta do Almoço\");\r\n        registrosSpinner.add(\"4_Saída\");\r\n        registrosSpinner.add(\"5_Entrada Extra\");\r\n        registrosSpinner.add(\"6_Saída Extra\");\r\n\r\n        Log.i(\"RegSpiner\",registrosSpinner.size() +\"  \"+registrosSpinner.toString());\r\n        if(tipo == 1)\r\n        {\r\n            List<String> aux = new ArrayList<String>();\r\n            aux = regUsed;\r\n            Log.i(\"regUsedArray\",aux.toString());\r\n            for(int i = 0; i < registrosSpinner.size(); i++)\r\n            {\r\n                for (int i2 = 0; i2 < aux.size(); i2++)\r\n                {\r\n                    if (aux.get(i2).equals(registrosSpinner.get(i)))\r\n                    {\r\n                        Log.i(\"regUsed\",\"removeu: \" +registrosSpinner.get(i));\r\n                        registrosSpinner.remove(i);\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        ArrayAdapter<String> regAdapter = new ArrayAdapter<String>(Cadastro.this, android.R.layout.simple_spinner_item, registrosSpinner);\r\n        reg.setAdapter(regAdapter);\r\n\r\n        btnSalvar = (Button) findViewById(R.id.Salvar);\r\n        btnCancelar = (Button) findViewById(R.id.Cancelar);\r\n        btnCancelar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                local.setText(\"\");\r\n                SpiFuncionario.setSelection(0);\r\n                reg.setSelection(0);\r\n            }\r\n        });\r\n        btnSalvar.setOnClickListener(this);\r\n        registro = Integer.parseInt(String.valueOf(reg.getSelectedItem().toString().charAt(0)));\r\n        Log.i(\"SpinnerRegistro\", \"\" + registro);\r\n    }\r\n\r\n    public boolean onOptionsItemSelected(MenuItem item)\r\n    {\r\n        int id = item.getItemId();\r\n\r\n        if(id == android.R.id.home)\r\n        {\r\n          this.finish();\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @SuppressLint(\"SuspiciousIndentation\")\r\n    private void loadSpinnerData(final int tipo) {\r\n        final ApontamentoDataSource db = new ApontamentoDataSource(getApplicationContext());\r\n\r\n        List<JSONObject> labels = null;\r\n\r\n        fireFunc.clear();\r\n\r\n        ArrayAdapter<String> dataAdapter;\r\n\r\n        Firebase.setAndroidContext(this);\r\n        FirebaseApp.initializeApp(getApplicationContext());\r\n        final FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        try {\r\n            database.setPersistenceEnabled(true);\r\n\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            // Toast.makeText(getApplicationContext(),\"Erro Firebase\",Toast.LENGTH_LONG).show();\r\n        }\r\n        final DatabaseReference myRef = database.getReference();\r\n        myRef.keepSynced(true);\r\n\r\n        Log.i(\"Referencia\",\"\"+database.getReference());\r\n\r\n        Query q = null;\r\n\r\n         q = myRef.child(\"funcionarios\").orderByChild(\"ATIVO\").equalTo(\"S\");\r\n                 q.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                Query query = null;\r\n\r\n                for(DataSnapshot objSnapshot:dataSnapshot.getChildren()) {\r\n                    Funcionario f = objSnapshot.getValue(Funcionario.class);\r\n                    // receber da activity principal lista de funcionarios para o dia atual\r\n                    // comparar cada objeto recebido com eles caso não seja um deles adicione na lista se não pula\r\n                    fireFunc.add(f.getCodNome());\r\n\r\n\r\n                    }\r\n               // query = myRef.child(\"funcionarios\").equalTo(funApontamentoActivity);\r\n               // query.addListenerForSingleValueEvent(this);\r\n                //    Log.i(\"FuncUniq\",\"\"+ query.toString());\r\n                if (tipo == 0) {\r\n                    Log.i(\"fireFunc: \",fireFunc.toString());\r\n                    Log.i(\"funcApontadosCad\",apontados.toString());\r\n                    for(int i = 0; i < fireFunc.size() ; i++ )\r\n                    {\r\n                        Log.i(\"funcApontadosFor1\",\"For1 rodada:\" + i);\r\n                        for(int i2 = 0 ; i2 < apontados.size() ; i2++)\r\n                        {\r\n                            Log.i(\"funcApontadosFor2\",\"For2 rodada:[\"+i+\"][\" + i2 +\"]\" );\r\n                            Log.i(\"funcApontadosIf\", fireFunc.get(i).toString() +\" == \"+ apontados.get(i2).toString());\r\n                            if(fireFunc.get(i).equals(apontados.get(i2)))\r\n                            {\r\n                                fireFunc.remove(i);\r\n\r\n                                Log.i(\"funcApontadosCad\",\"removeu: \"+apontados.get(i2));\r\n                            }\r\n                        }\r\n                    }\r\n                    ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(Cadastro.this, android.R.layout.simple_spinner_item, fireFunc);\r\n\r\n                    SpiFuncionario.setAdapter(dataAdapter);\r\n                }\r\n\r\n\r\n\r\n\r\n                if (tipo == 1) {\r\n                    query = myRef.child(\"funcionarios\").orderByChild(\"CODFUNCIONATIO\").equalTo(funApontamentoActivity);\r\n                    query.addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                            fireFunc.clear();\r\n                            for (DataSnapshot objSnapshot : dataSnapshot.getChildren()) {\r\n                                Funcionario f = objSnapshot.getValue(Funcionario.class);\r\n\r\n                                fireFunc.add(f.getCodNome());\r\n\r\n                            }\r\n                            Log.i(\"fireFunc: \", fireFunc.toString());\r\n                            ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(Cadastro.this, android.R.layout.simple_spinner_item, fireFunc);\r\n                            SpiFuncionario.setAdapter(dataAdapter);\r\n                        }\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n\r\n/*\r\n                    String fun = null;\r\n                    for(int i = 0; i <= fireFunc.size(); i++)\r\n                    {\r\n                        String aux = fireFunc.get(i).substring(0,3);\r\n\r\n                        int aux2 = Integer.parseInt(aux);\r\n\r\n                        Log.i(\"ResultFunc\",\"\"+aux2);\r\n                        if(aux2 == funApontamentoActivity)\r\n                        {\r\n                            fun = fireFunc.get(i);\r\n                            i = (fireFunc.size() +1);\r\n                        }\r\n                    }\r\n\r\n                    fireFunc.add(fun);*/\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n\r\n\r\n\r\n        });\r\n        Log.i(\"fireFuncDPS: \",fireFunc.toString());\r\n        /*\r\n\r\n        if (tipo == 0) {\r\n            labels = db.todosFuncionarios();\r\n        }\r\n        if (tipo == 1) {\r\n            labels = db.todosFuncionarios(funApontamentoActivity);\r\n        }\r\n        // Creating adapter for spinner\r\n        ArrayAdapter<JSONObject> dataAdapter = new ArrayAdapter<JSONObject>(this, android.R.layout.simple_spinner_item, labels);\r\n        // Drop down layout style - list view with radio button\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);*/\r\n\r\n        // attaching data adapter to spinner\r\n\r\n\r\n    }\r\n\r\n    public void insereDadoP(Ponto p)\r\n    {\r\n        ContentValues valores;\r\n        long resultado;\r\n\r\n        SQLiteDatabase db = new DatabaseHelper(getApplicationContext()).getWritableDatabase();\r\n\r\n        Cursor cursor = db.rawQuery(\"select codfuncionatio || ': ' || nome from funcionarios where codfuncionatio = \"+ SpiFuncionario,null);\r\n        cursor.moveToFirst();\r\n        String descricao = cursor.getString(0);\r\n\r\n        valores = new ContentValues();\r\n        valores.put(\"DATA\", p.getDATA());\r\n        valores.put(\"CODFUNCIONATIO\",p.getCODFUNCIONATIO());\r\n        valores.put(\"DESCRICAO\",descricao);\r\n        valores.put(\"APONT1\",p.getAPONT1());\r\n        valores.put(\"GPS1\", p.getGPS1());\r\n        valores.put(\"LOCAL1\", p.getLOCAL1());\r\n        valores.put(\"APONT2\", p.getAPONT2());\r\n        valores.put(\"GPS2\", p.getGPS2());\r\n        valores.put(\"LOCAL2\", p.getLOCAL2());\r\n        valores.put(\"APONT3\", p.getAPONT3());\r\n        valores.put(\"GPS3\", p.getGPS3());\r\n        valores.put(\"LOCAL3\", p.getLOCAL3());\r\n        valores.put(\"APONT4\", p.getAPONT4());\r\n        valores.put(\"GPS4\", p.getGPS4());\r\n        valores.put(\"LOCAL4\", p.getLOCAL4());\r\n        valores.put(\"APONTEXTRA\", p.getAPONTEXTRA());\r\n        valores.put(\"GPSEXTRA\", p.getGPSEXTRA());\r\n        valores.put(\"LOCALEXTRA\", p.getLOCALEXTRA());\r\n        valores.put(\"APONTEXTRA2\", p.getAPONTEXTRA2());\r\n        valores.put(\"GPSEXTRA2\", p.getGPSEXTRA2());\r\n        valores.put(\"LOCALEXTRA2\", p.getGPSEXTRA2());\r\n        valores.put(\"ROWID\",p.getROWID());\r\n        Log.i(\"Query\",valores.toString());\r\n        resultado = db.insert(\"apontamentos\", null, valores);\r\n        db.close();\r\n\r\n\r\n        Date c = null;\r\n        SimpleDateFormat format = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        try {\r\n            c = (Date) format.parse(p.getDATA());\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if(c != null) {\r\n            p.setDATA(format.format(c));\r\n        }\r\n        Log.i(\"PInsert\",p.toString());\r\n\r\n        Firebase.setAndroidContext(this);\r\n        FirebaseApp.initializeApp(getApplicationContext());\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n\r\n        DatabaseReference myRef = database.getReference();\r\n        myRef.keepSynced(true);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public String insereDado(String data, int funcionario , String apont, String local, String gps, int registro){\r\n        ContentValues valores;\r\n        long resultado;\r\n\r\n        SQLiteDatabase db = new DatabaseHelper(getApplicationContext()).getWritableDatabase();\r\n\r\n        Cursor cursor = db.rawQuery(\"select codfuncionatio || ': ' || nome from funcionarios where codfuncionatio = \"+funcionario,null);\r\n        cursor.moveToFirst();\r\n        String descricao = SpiFuncionario.getSelectedItem().toString();\r\n\r\n        Ponto p = new Ponto();\r\n\r\n        Firebase.setAndroidContext(this);\r\n        FirebaseApp.initializeApp(getApplicationContext());\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n\r\n        DatabaseReference myRef = database.getReference();\r\n        myRef.keepSynced(true);\r\n\r\n        SimpleDateFormat entrada = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\r\n        Date c = null;\r\n        SimpleDateFormat format = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        try {\r\n            c = (Date) entrada.parse(data);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if(c != null) {\r\n            p.setDATA(format.format(c));\r\n        }\r\n\r\n        Log.i(\"Data Alt\",p.getDATA());\r\n\r\n\r\n        p.setROWID((long)(Math.random() * 2 * 9223372036854775.0 - 9223372036854776.0));\r\n        p.setCODFUNCIONATIO(codFunc);\r\n        p.setDESCRICAO(descricao);\r\n        p.setDATACODFUNCIONATIO(p.getDATA()+\"_\"+codFunc);\r\n\r\n        valores = new ContentValues();\r\n        valores.put(\"DATA\", data);\r\n        valores.put(\"CODFUNCIONATIO\",funcionario);\r\n        valores.put(\"DESCRICAO\",descricao);\r\n        if(registro == 1)\r\n        {\r\n            valores.put(\"APONT1\", apont);\r\n            valores.put(\"GPS1\", gps);\r\n            valores.put(\"LOCAL1\", local);\r\n            p.setAPONT1(apont);\r\n            p.setGPS1(gps);\r\n            p.setLOCAL1(local);\r\n        }\r\n        else if(registro == 2)\r\n        {\r\n            valores.put(\"APONT2\", apont);\r\n            valores.put(\"GPS2\", gps);\r\n            valores.put(\"LOCAL2\", local);\r\n            p.setAPONT2(apont);\r\n            p.setGPS2(gps);\r\n            p.setLOCAL2(local);\r\n        }\r\n        else if(registro == 3)\r\n        {\r\n            valores.put(\"APONT3\", apont);\r\n            valores.put(\"GPS3\", gps);\r\n            valores.put(\"LOCAL3\", local);\r\n            p.setAPONT3(apont);\r\n            p.setGPS3(gps);\r\n            p.setLOCAL3(local);\r\n        }\r\n        else if(registro == 4)\r\n        {\r\n            valores.put(\"APONT4\", apont);\r\n            valores.put(\"GPS4\", gps);\r\n            valores.put(\"LOCAL4\", local);\r\n            p.setAPONT4(apont);\r\n            p.setGPS4(gps);\r\n            p.setLOCAL4(local);\r\n        }\r\n        else if(registro == 5)\r\n        {\r\n            valores.put(\"APONTEXTRA\", apont);\r\n            valores.put(\"GPSEXTRA\", gps);\r\n            valores.put(\"LOCALEXTRA\", local);\r\n            p.setAPONTEXTRA(apont);\r\n            p.setGPSEXTRA(gps);\r\n            p.setLOCALEXTRA(local);\r\n        }\r\n        else if(registro == 6)\r\n        {\r\n            valores.put(\"APONTEXTRA2\", apont);\r\n            valores.put(\"GPSEXTRA2\", gps);\r\n            valores.put(\"LOCALEXTRA2\", local);\r\n            p.setAPONTEXTRA2(apont);\r\n            p.setGPSEXTRA2(gps);\r\n            p.setLOCALEXTRA2(local);\r\n        }\r\n        valores.put(\"ROWID\",p.getROWID());\r\n\r\n        Log.i(\"Query\",valores.toString());\r\n        Log.i(\"PInsert\",p.toString());\r\n        resultado = db.insert(\"apontamentos\", null, valores);\r\n\r\n        try{\r\n            myRef.child(\"apontamentos\").child(\"\"+p.getROWID()).setValue(p);\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Toast.makeText(getApplicationContext(),\"Erro Inserir no Firebase\",Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        db.close();\r\n\r\n        if (resultado ==-1)\r\n        {\r\n            Toast.makeText(getApplicationContext(), \"Erro ao inserir registro\", Toast.LENGTH_LONG).show();\r\n            return \"Erro ao inserir registro\";\r\n        }\r\n         else\r\n        {\r\n            Toast.makeText(getApplicationContext(), \"Registro Inserido com sucesso\", Toast.LENGTH_LONG).show();\r\n            return \"Registro Inserido com sucesso\";\r\n        }\r\n    }\r\n\r\n    public void alteraDado(final String data, final int funcionario , final String apont, final String local, final String gps, final int registro){\r\n        final String[] cmpApont = {null};\r\n        final String[] cmpGps = {null};\r\n        final String[] cmpLocal = {null};\r\n\r\n\r\n        final SQLiteDatabase db = new DatabaseHelper(getApplicationContext()).getWritableDatabase();\r\n        Cursor cursor = db.rawQuery(\"select codfuncionatio || ': ' || nome from funcionarios where codfuncionatio = \" + funcionario, null);\r\n        cursor.moveToFirst();\r\n        final String descricao = SpiFuncionario.getSelectedItem().toString();\r\n\r\n\r\n        final Ponto[] p = {new Ponto()};\r\n\r\n        Firebase.setAndroidContext(this);\r\n        FirebaseApp.initializeApp(getApplicationContext());\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n\r\n        final DatabaseReference myRef = database.getReference();\r\n        myRef.keepSynced(true);\r\n\r\n\r\n\r\n        Log.i(\"PontoROWID\",\"\"+ROWIDapt+\"\\t \"+\"Reg \"+registro);\r\n        myRef.child(\"apontamentos\").child(\"\"+ROWIDapt).addValueEventListener(new ValueEventListener() {\r\n           @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                p[0] = dataSnapshot.getValue(Ponto.class);\r\n                try {\r\n                    Log.i(\"Ponto\", \"\" + p[0].toString());\r\n                }\r\n                catch(Exception e)\r\n                {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n               SimpleDateFormat entrada = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n               Date c = null;\r\n               SimpleDateFormat format = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n               try {\r\n                   c = (Date) entrada.parse(data);\r\n               } catch (ParseException e) {\r\n                   e.printStackTrace();\r\n               }\r\n               if(c != null) {\r\n                   p[0].setDATA(format.format(c));\r\n               }\r\n\r\n               Log.i(\"Data Alt\",p[0].getDATA());\r\n\r\n\r\n                p[0].setROWID(ROWIDapt);\r\n                p[0].setCODFUNCIONATIO(codFunc);\r\n                p[0].setDESCRICAO(descricao);\r\n                p[0].setDATACODFUNCIONATIO(p[0].getDATA()+\"_\"+codFunc);\r\n\r\n                if(registro == 1)\r\n                {\r\n                    cmpApont[0] = \"APONT1\";\r\n                    cmpGps[0] = \"GPS1\";\r\n                    cmpLocal[0] = \"LOCAL1\";\r\n                    p[0].setAPONT1(apont);\r\n                    p[0].setGPS1(gps);\r\n                    p[0].setLOCAL1(local);\r\n                }\r\n                else if(registro == 2)\r\n                {\r\n                    cmpApont[0] = \"APONT2\";\r\n                    cmpGps[0] = \"GPS2\";\r\n                    cmpLocal[0] = \"LOCAL2\";\r\n                    p[0].setAPONT2(apont);\r\n                    p[0].setGPS2(gps);\r\n                    p[0].setLOCAL2(local);\r\n                }\r\n                else if(registro == 3)\r\n                {\r\n                    cmpApont[0] = \"APONT3\";\r\n                    cmpGps[0] = \"GPS3\";\r\n                    cmpLocal[0] = \"LOCAL3\";\r\n                    p[0].setAPONT3(apont);\r\n                    p[0].setGPS3(gps);\r\n                    p[0].setLOCAL3(local);\r\n                }\r\n                else if(registro == 4)\r\n                {\r\n                    cmpApont[0] = \"APONT4\";\r\n                    cmpGps[0] = \"GPS4\";\r\n                    cmpLocal[0] = \"LOCAL4\";\r\n                    p[0].setAPONT4(apont);\r\n                    p[0].setGPS4(gps);\r\n                    p[0].setLOCAL4(local);\r\n                }\r\n                else if(registro == 5)\r\n                {\r\n                    cmpApont[0] = \"APONTEXTRA\";\r\n                    cmpGps[0] = \"GPSEXTRA\";\r\n                    cmpLocal[0] = \"LOCALEXTRA\";\r\n                    p[0].setAPONTEXTRA(apont);\r\n                    p[0].setGPSEXTRA(gps);\r\n                    p[0].setLOCALEXTRA(local);\r\n                }\r\n                else if(registro == 6)\r\n                {\r\n                    cmpApont[0] = \"APONTEXTRA2\";\r\n                    cmpGps[0] = \"GPSEXTRA2\";\r\n                    cmpLocal[0] = \"LOCALEXTRA2\";\r\n                    p[0].setAPONTEXTRA2(apont);\r\n                    p[0].setGPSEXTRA2(gps);\r\n                    p[0].setLOCALEXTRA2(local);\r\n                }\r\n\r\n                try{\r\n                    myRef.child(\"apontamentos\").child(\"\"+p[0].getROWID()).setValue(p[0]);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n                    Toast.makeText(getApplicationContext(),\"Erro Inserir no Firebase\",Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n\r\n                String update = \"update apontamentos\\n\" +\r\n                        \"set \"+ cmpApont[0] +\" = '\"+data+\"'||' '|| time(current_timestamp,'localtime'),\\n\" +\r\n                        \"    \"+ cmpGps[0] +\" = '\"+gps+\"',\\n\" +\r\n                        \"    \"+ cmpLocal[0] +\" = '\"+local+\"'\\n\" +\r\n                        \"where codfuncionatio = \"+funcionario+\" and data = '\"+data+\"'||' '||'00:00:00'\";\r\n                Log.i(\"QueryUpdate\",update);\r\n\r\n                db.execSQL(update);\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.i(\"The read failed: \",\"\"+ databaseError.getCode());\r\n            }\r\n        });\r\n        Log.i(\"PontoFora\",p[0].toString());\r\n\r\n\r\n    }\r\n    public boolean isOnline() {\r\n        ConnectivityManager manager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n\r\n        return manager.getActiveNetworkInfo() != null &&\r\n                manager.getActiveNetworkInfo().isConnectedOrConnecting();\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v)\r\n    {\r\n        Log.i(\"isOnline1\",Boolean.toString(isOnline()));\r\n        Log.i(\"isOnline2\",Boolean.toString((gps.canGetLocation() || locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER))));\r\n        Log.i(\"isOnline3\",Boolean.toString(!((String.valueOf(latitude).trim() + \",\" + String.valueOf(longitude).trim()).equals(\"0.0,0.0\"))));\r\n        if (isOnline() && (gps.canGetLocation() || locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) && (!((String.valueOf(latitude).trim() + \",\" + String.valueOf(longitude).trim()).equals(\"0.0,0.0\"))) ) {\r\n                String lat;\r\n                String longi;\r\n                String compare;\r\n                try {\r\n                    obj = new String(SpiFuncionario.getSelectedItem().toString());\r\n                    codFunc = Integer.parseInt(obj.substring(0, 3));\r\n                    Log.i(\"SpinnerFun\", \"\" + codFunc);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                    Log.i(\"SpinnerFun\", \"deu errado \" + SpiFuncionario.getSelectedItem().toString() + \"\\n Cod: \" + codFunc);\r\n                }\r\n\r\n                registro = Integer.parseInt(String.valueOf(reg.getSelectedItem().toString().charAt(0)));\r\n                Log.i(\"SpinnerReg\", \"\" + registro);\r\n                SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n                SimpleDateFormat hora = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n                Log.i(\"calendarHoraFormato\", \"\" + hora.format(Calendar.getInstance().getTime()));\r\n                Log.i(\"calendarComFormato\", \"\" + format.format(Calendar.getInstance().getTime()));\r\n                Log.i(\"Coordenadas\", String.valueOf(latitude) + \", \" + String.valueOf(longitude));\r\n                if (dataReg != null) {\r\n\r\n\r\n                    try {\r\n                        d = new SimpleDateFormat(\"dd/MM/yyyy\").parse(dataReg);\r\n                    } catch (ParseException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    Log.i(\"dataRegFormat2\", \"\" + format.format(d));\r\n\r\n                }\r\n\r\n\r\n                if (tipo == 0) {\r\n                    lat = String.valueOf(latitude).trim();\r\n                    longi = String.valueOf(longitude).trim();\r\n                    Log.i(\"LatLongi\", lat + \",\" + longi);\r\n                    compare = lat + \",\" + longi;\r\n                    Log.i(\"LatLongi2\", lat + \",\" + longi);\r\n                    String LatLong = TimeAPIRequest.getTimeResponse(String.valueOf(latitude).trim(), String.valueOf(longitude).trim());\r\n                    String dateTime  = LatLong.split(\"dateTime\")[1].split(\"\\\":\\\"\")[1].split(\",\\\"\")[0].split(\"\\\\.\")[0].replace(\"T\",\" \");\r\n                    String date = LatLong.split(\"\\\"date\\\":\\\"\")[1].split(\"\\\",\\\"\")[0];\r\n                    Log.i(\"SUBSTRDATE\",dateTime.substring(0,10));\r\n                    insereDado(dateTime.substring(0,10) + \" 00:00:00\", codFunc, \"\" + dateTime, local.getText().toString(), lat + \", \" + longi, registro);\r\n                    //Log.i(\"DADOINSERINDO\",\"\" + hora.format(Calendar.getInstance().getTime()));\r\n\r\n                }\r\n                if (tipo == 1) {\r\n                    lat = String.valueOf(latitude).trim();\r\n                    longi = String.valueOf(longitude).trim();\r\n                    Log.i(\"LatLongi\", lat + \",\" + longi);\r\n                    compare = lat + \",\" + longi;\r\n                    Log.i(\"LatLongi2\", lat + \",\" + longi);\r\n                    String LatLong = TimeAPIRequest.getTimeResponse(String.valueOf(latitude).trim(), String.valueOf(longitude).trim());\r\n                    String dateTime  = LatLong.split(\"dateTime\")[1].split(\"\\\":\\\"\")[1].split(\",\\\"\")[0].split(\"\\\\.\")[0].replace(\"T\",\" \");\r\n                    String date = LatLong.split(\"\\\"date\\\":\\\"\")[1].split(\"\\\",\\\"\")[0];\r\n                    Log.i(\"SUBSTRDATE\",dateTime.substring(0,10));\r\n                    alteraDado(\"\" + dateTime.substring(0,10) + \" 00:00:00\", funApontamentoActivity, \"\" + dateTime, local.getText().toString(), lat + \", \" + longi, registro);\r\n\r\n                }\r\n\r\n\r\n                Toast.makeText(getApplicationContext(), \"Apontar\", Toast.LENGTH_LONG).show();\r\n                Intent it = new Intent(Cadastro.this, SearchListActivity.class);\r\n                it.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\r\n                startActivity(it);\r\n            }\r\n        else\r\n        {\r\n            if(!isOnline())\r\n            {\r\n                gps.showSettingsInternetAlert();\r\n            }\r\n            if((!gps.canGetLocation() || !locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)))\r\n            {\r\n                gps.showSettingsAlert();\r\n            }\r\n            if(((String.valueOf(latitude).trim() + \",\" + String.valueOf(longitude).trim()).equals(\"0.0,0.0\")))\r\n            {\r\n                gps.showSettingsAlert();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pontoeletroniconew/Cadastro.java b/app/src/main/java/com/example/pontoeletroniconew/Cadastro.java
--- a/app/src/main/java/com/example/pontoeletroniconew/Cadastro.java	(revision 594edc373ceb7301bd6d888785d2d2a627a38810)
+++ b/app/src/main/java/com/example/pontoeletroniconew/Cadastro.java	(date 1715559851140)
@@ -200,12 +200,12 @@
         FirebaseApp.initializeApp(getApplicationContext());
         final FirebaseDatabase database = FirebaseDatabase.getInstance();
         try {
-            database.setPersistenceEnabled(true);
+            database.setPersistenceEnabled(false);
 
         }
         catch (Exception e)
         {
-            // Toast.makeText(getApplicationContext(),"Erro Firebase",Toast.LENGTH_LONG).show();
+             Toast.makeText(getApplicationContext(),"Erro Firebase",Toast.LENGTH_LONG).show();
         }
         final DatabaseReference myRef = database.getReference();
         myRef.keepSynced(true);
